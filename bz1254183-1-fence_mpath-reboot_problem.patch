From 03f012cd8f2c5c7b60d408088d325e70e9b6404f Mon Sep 17 00:00:00 2001
From: Marek 'marx' Grac <mgrac@redhat.com>
Date: Thu, 16 Jul 2015 09:26:32 +0200
Subject: [PATCH 5/6] fencing: Add option that forces ON even if machine is
 already ON

This feature is required for fence_scsi when we have to do unfencing after reboot even
if node was not fenced at all. SCSI keys are stored in /var/run/cluster and so they
have to re-created.

Resolves: rhbz#1254183
---
 fence/agents/lib/fencing.py.py | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/fence/agents/lib/fencing.py.py b/fence/agents/lib/fencing.py.py
index f41aab8..56acf02 100644
--- a/fence/agents/lib/fencing.py.py
+++ b/fence/agents/lib/fencing.py.py
@@ -82,6 +82,10 @@ all_opt = {
 		"getopt" : "",
 		"help" : "",
 		"order" : 1},
+	"force_on" : {
+		"getopt" : "",
+		"help" : "",
+		"order" : 1},
 	"action" : {
 		"getopt" : "o:",
 		"longopt" : "action",
@@ -810,8 +814,9 @@ def fence_action(connection, options, set_power_fn, get_power_fn, get_outlet_lis
 			fail(EC_STATUS)
 
 		if options["--action"] == status:
-			print "Success: Already %s" % (status.upper())
-			return 0
+			if not (status == "on" and "force_on" in options["device_opt"]):
+				print "Success: Already %s" % (status.upper())
+				return 0
 
 		if options["--action"] == "on":
 			if set_multi_power_fn(connection, options, set_power_fn, get_power_fn, 1 + int(options["--retry-on"])):
-- 
1.9.3

